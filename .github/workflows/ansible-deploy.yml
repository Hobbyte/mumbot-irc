name: ansible-deploy

on:
  # Triggers the workflow on push events but only for the master branch
  push:
    branches: [ master ]
    
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  change-check:
    runs-on: ubuntu-latest
    outputs:
      change-status: ${{ steps.changes.outputs.image }}
    steps:
      - uses: actions/checkout@v3
      
      # Check if mumbot image needs to be rebuilt by reviewing changed files
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            image:
              - 'Dockerfile'
              - '*.json'
              - 'scripts/*.json'
              - 'scripts/*.coffee'
  
  build:
    needs: change-check
    if: needs.change-check.outputs.change-status == 'true'
    runs-on: ubuntu-latest
    steps:
      # Rebuild Mumbot image
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: theta142/mumbot:latest
    
  deploy:
    needs: build
    # Always deploy, even if no new image was built
    # Deployment is idempotent via Ansible
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - uses: cbpowell/ansible-playbook-docker-action@v1.5
        env:
          # Config
          GH_COMMIT_STATUS_TOKEN: ${{ secrets. GH_COMMIT_STATUS_TOKEN }}
          HUBOT_IRC_PASSWORD: ${{ secrets.HUBOT_IRC_PASSWORD }}
          HUBOT_DISCORDER_GUILD: ${{ secrets.HUBOT_DISCORDER_GUILD }}
          HUBOT_DISCORDER_TOKEN: ${{ secrets.HUBOT_DISCORDER_TOKEN }}
          HUBOT_GIPHY_API_KEY: ${{ secrets.HUBOT_GIPHY_API_KEY }}
          HUBOT_GOOGLE_CSE_ID: ${{ secrets.HUBOT_GOOGLE_CSE_ID }}
          HUBOT_GOOGLE_CSE_KEY: ${{ secrets.HUBOT_GOOGLE_CSE_KEY }}
        with:
          playbookName:     .ansible/deploy.yml
          inventoryFile:    .ansible/inventory.yml
          requirementsFile: .ansible/requirements.yml
          extraFile:        .ansible/test_vars.yml #TEMPORARY
          keyFile:          .ansible/id_mumbot.pem
          vaultPass:        ${{ secrets.KEYFILE_VAULT_PASS }}
          # verbosity: "vvv"
